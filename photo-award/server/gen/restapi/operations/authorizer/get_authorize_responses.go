// Code generated by go-swagger; DO NOT EDIT.

package authorizer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetAuthorizeOKCode is the HTTP code returned for type GetAuthorizeOK
const GetAuthorizeOKCode int = 200

/*
GetAuthorizeOK aurhorize ok and returns token

swagger:response getAuthorizeOK
*/
type GetAuthorizeOK struct {

	/*
	  In: Body
	*/
	Payload *GetAuthorizeOKBody `json:"body,omitempty"`
}

// NewGetAuthorizeOK creates GetAuthorizeOK with default headers values
func NewGetAuthorizeOK() *GetAuthorizeOK {

	return &GetAuthorizeOK{}
}

// WithPayload adds the payload to the get authorize o k response
func (o *GetAuthorizeOK) WithPayload(payload *GetAuthorizeOKBody) *GetAuthorizeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get authorize o k response
func (o *GetAuthorizeOK) SetPayload(payload *GetAuthorizeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthorizeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAuthorizeUnauthorizedCode is the HTTP code returned for type GetAuthorizeUnauthorized
const GetAuthorizeUnauthorizedCode int = 401

/*
GetAuthorizeUnauthorized authentification failed

swagger:response getAuthorizeUnauthorized
*/
type GetAuthorizeUnauthorized struct {
}

// NewGetAuthorizeUnauthorized creates GetAuthorizeUnauthorized with default headers values
func NewGetAuthorizeUnauthorized() *GetAuthorizeUnauthorized {

	return &GetAuthorizeUnauthorized{}
}

// WriteResponse to the client
func (o *GetAuthorizeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
